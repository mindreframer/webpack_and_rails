var fs          = require('fs');
var gulp        = require('gulp');
var rename      = require('gulp-rename');
var rimraf      = require('gulp-rimraf');
var beep        = require('beepbeep')
var gutil       = require('gulp-util');
var plumber     = require('gulp-plumber');
var sass        = require('gulp-sass');
var prefix      = require('gulp-autoprefixer');
var browserSync = require('browser-sync');
var reload      = browserSync.reload;

// simpler shelling out
require('shelljs/global');


// integration with rails, this file is generated by LibSassSupport
var sass_paths_file = './tmp/gulp-sass-paths'
var jsonFile        = fs.readFileSync(sass_paths_file, "utf8");
var includePaths    = JSON.parse(jsonFile);


// Error handling for Gulp
var onError = function (err) {
  beep([0, 0, 0]);
  gutil.log(gutil.colors.green(err));
};

// a hack to switch variables depending on rails environment
var switchCssToEnv = function(rails_env){
  var cmd_text = "cd app/assets/stylesheets/0-globals && rm -f _env.scss &&  ln -s env/_" + rails_env + ".txt _env.scss"
  if (exec(cmd_text).code !== 0) {
    echo('Error: switchCssToEnv failed!');
    exit(1);
  }
}


var css_source = 'app/assets/stylesheets/**/**/*.scss'
var css_dest   = 'app/assets/gulp-out/dist'

if ( fs.existsSync('ENVIRONMENT') ) {
  var rails_env = fs.readFileSync( "ENVIRONMENT", {encoding: 'utf8'} ).trim();
} else {
  var rails_env = 'development'
}

var css_ext;

if (rails_env === 'development'){
  css_ext = '.css'
} else {
  css_ext = '.scss'
}

switchCssToEnv(rails_env)



gulp.task('sass', function () {
    gulp.src(css_source)
        .pipe(plumber(function (error) {
            onError(error);
            this.emit('end');
        }))
        .pipe(sass({
          //sourceComments: 'map', // this causes segfaults on CSS typos...
          sourceComments: 'normal',
          errLogToConsole: true,
          includePaths: includePaths
        }))
        .pipe(prefix("last 1 version", "> 1%", "ie 8", "ie 7"))
        .pipe(rename(function (path) {
            path.extname = css_ext
        }))
        .pipe(gulp.dest(css_dest))

        .pipe(reload({stream:true}));
});

// browser-sync task for starting the server.
gulp.task('browser-sync', function() {
  browserSync({
        proxy: "localhost:3000"
  });
});

// create a clean slate to work with
gulp.task('clear', function(){
  gulp.src(css_dest, { read: false }) // much faster
    .pipe(rimraf());
})

gulp.task('watch', function() {
  // watch scss files
  gulp.watch('./app/assets/stylesheets/**/**/*.scss', ['sass']);
});

gulp.task('default', ['clear', 'sass', 'browser-sync', 'watch']);
